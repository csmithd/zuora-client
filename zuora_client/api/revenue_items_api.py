# coding: utf-8




from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from zuora_client.api_client import ApiClient


class RevenueItemsApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def g_et_revenue_items_by_charge_revenue_event_number(self, event_number, **kwargs):  # noqa: E501
        """Get revenue items by revenue event number  # noqa: E501

        This REST API reference describes how to get the details of each revenue item in a revenue event by specifying the revenue event number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_charge_revenue_event_number(event_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str event_number: The number associated with the revenue event. (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.g_et_revenue_items_by_charge_revenue_event_number_with_http_info(event_number, **kwargs)  # noqa: E501
        else:
            (data) = self.g_et_revenue_items_by_charge_revenue_event_number_with_http_info(event_number, **kwargs)  # noqa: E501
            return data

    def g_et_revenue_items_by_charge_revenue_event_number_with_http_info(self, event_number, **kwargs):  # noqa: E501
        """Get revenue items by revenue event number  # noqa: E501

        This REST API reference describes how to get the details of each revenue item in a revenue event by specifying the revenue event number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_charge_revenue_event_number_with_http_info(event_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str event_number: The number associated with the revenue event. (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['event_number', 'zuora_entity_ids', 'page_size']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method g_et_revenue_items_by_charge_revenue_event_number" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'event_number' is set
        if ('event_number' not in params or
                params['event_number'] is None):
            raise ValueError("Missing the required parameter `event_number` when calling `g_et_revenue_items_by_charge_revenue_event_number`")  # noqa: E501

        if 'page_size' in params and params['page_size'] > 300:  # noqa: E501
            raise ValueError("Invalid value for parameter `page_size` when calling `g_et_revenue_items_by_charge_revenue_event_number`, must be a value less than or equal to `300`")  # noqa: E501
        collection_formats = {}

        path_params = {}
        if 'event_number' in params:
            path_params['event-number'] = params['event_number']  # noqa: E501

        query_params = []
        if 'page_size' in params:
            query_params.append(('pageSize', params['page_size']))  # noqa: E501

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/revenue-items/revenue-events/{event-number}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GETRevenueItemsType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def g_et_revenue_items_by_charge_revenue_summary_number(self, crs_number, **kwargs):  # noqa: E501
        """Get revenue items by charge revenue summary number  # noqa: E501

        This REST API reference describes how to get the details for each revenue item in a charge revenue summary by specifying the charge revenue summary number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_charge_revenue_summary_number(crs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str crs_number: The charge revenue summary number. (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.g_et_revenue_items_by_charge_revenue_summary_number_with_http_info(crs_number, **kwargs)  # noqa: E501
        else:
            (data) = self.g_et_revenue_items_by_charge_revenue_summary_number_with_http_info(crs_number, **kwargs)  # noqa: E501
            return data

    def g_et_revenue_items_by_charge_revenue_summary_number_with_http_info(self, crs_number, **kwargs):  # noqa: E501
        """Get revenue items by charge revenue summary number  # noqa: E501

        This REST API reference describes how to get the details for each revenue item in a charge revenue summary by specifying the charge revenue summary number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_charge_revenue_summary_number_with_http_info(crs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str crs_number: The charge revenue summary number. (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['crs_number', 'zuora_entity_ids', 'page_size']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method g_et_revenue_items_by_charge_revenue_summary_number" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'crs_number' is set
        if ('crs_number' not in params or
                params['crs_number'] is None):
            raise ValueError("Missing the required parameter `crs_number` when calling `g_et_revenue_items_by_charge_revenue_summary_number`")  # noqa: E501

        if 'page_size' in params and params['page_size'] > 300:  # noqa: E501
            raise ValueError("Invalid value for parameter `page_size` when calling `g_et_revenue_items_by_charge_revenue_summary_number`, must be a value less than or equal to `300`")  # noqa: E501
        collection_formats = {}

        path_params = {}
        if 'crs_number' in params:
            path_params['crs-number'] = params['crs_number']  # noqa: E501

        query_params = []
        if 'page_size' in params:
            query_params.append(('pageSize', params['page_size']))  # noqa: E501

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/revenue-items/charge-revenue-summaries/{crs-number}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GETRevenueItemsType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def g_et_revenue_items_by_revenue_schedule(self, rs_number, **kwargs):  # noqa: E501
        """Get revenue items by revenue schedule  # noqa: E501

        This REST API reference describes how to get the details for each revenue items in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_revenue_schedule(rs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str rs_number: Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\". (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRsRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.g_et_revenue_items_by_revenue_schedule_with_http_info(rs_number, **kwargs)  # noqa: E501
        else:
            (data) = self.g_et_revenue_items_by_revenue_schedule_with_http_info(rs_number, **kwargs)  # noqa: E501
            return data

    def g_et_revenue_items_by_revenue_schedule_with_http_info(self, rs_number, **kwargs):  # noqa: E501
        """Get revenue items by revenue schedule  # noqa: E501

        This REST API reference describes how to get the details for each revenue items in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.g_et_revenue_items_by_revenue_schedule_with_http_info(rs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str rs_number: Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\". (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :param int page_size: Number of rows returned per page.
        :return: GETRsRevenueItemsType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['rs_number', 'zuora_entity_ids', 'page_size']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method g_et_revenue_items_by_revenue_schedule" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'rs_number' is set
        if ('rs_number' not in params or
                params['rs_number'] is None):
            raise ValueError("Missing the required parameter `rs_number` when calling `g_et_revenue_items_by_revenue_schedule`")  # noqa: E501

        if 'page_size' in params and params['page_size'] > 300:  # noqa: E501
            raise ValueError("Invalid value for parameter `page_size` when calling `g_et_revenue_items_by_revenue_schedule`, must be a value less than or equal to `300`")  # noqa: E501
        collection_formats = {}

        path_params = {}
        if 'rs_number' in params:
            path_params['rs-number'] = params['rs_number']  # noqa: E501

        query_params = []
        if 'page_size' in params:
            query_params.append(('pageSize', params['page_size']))  # noqa: E501

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/revenue-items/revenue-schedules/{rs-number}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GETRsRevenueItemsType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def p_ut_custom_fieldson_revenue_items_by_revenue_event(self, event_number, request, **kwargs):  # noqa: E501
        """Update custom fields on revenue items by revenue event number  # noqa: E501

        This REST API reference describes how to update custom fields on revenue items by specifying the revenue event number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.p_ut_custom_fieldson_revenue_items_by_revenue_event(event_number, request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str event_number: The number associated with the revenue event. (required)
        :param PUTEventRIDetailType request:  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: CommonResponseType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.p_ut_custom_fieldson_revenue_items_by_revenue_event_with_http_info(event_number, request, **kwargs)  # noqa: E501
        else:
            (data) = self.p_ut_custom_fieldson_revenue_items_by_revenue_event_with_http_info(event_number, request, **kwargs)  # noqa: E501
            return data

    def p_ut_custom_fieldson_revenue_items_by_revenue_event_with_http_info(self, event_number, request, **kwargs):  # noqa: E501
        """Update custom fields on revenue items by revenue event number  # noqa: E501

        This REST API reference describes how to update custom fields on revenue items by specifying the revenue event number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.p_ut_custom_fieldson_revenue_items_by_revenue_event_with_http_info(event_number, request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str event_number: The number associated with the revenue event. (required)
        :param PUTEventRIDetailType request:  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: CommonResponseType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['event_number', 'request', 'zuora_entity_ids']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method p_ut_custom_fieldson_revenue_items_by_revenue_event" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'event_number' is set
        if ('event_number' not in params or
                params['event_number'] is None):
            raise ValueError("Missing the required parameter `event_number` when calling `p_ut_custom_fieldson_revenue_items_by_revenue_event`")  # noqa: E501
        # verify the required parameter 'request' is set
        if ('request' not in params or
                params['request'] is None):
            raise ValueError("Missing the required parameter `request` when calling `p_ut_custom_fieldson_revenue_items_by_revenue_event`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'event_number' in params:
            path_params['event-number'] = params['event_number']  # noqa: E501

        query_params = []

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'request' in params:
            body_params = params['request']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/revenue-items/revenue-events/{event-number}', 'PUT',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='CommonResponseType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def p_ut_custom_fieldson_revenue_items_by_revenue_schedule(self, rs_number, request, **kwargs):  # noqa: E501
        """Update custom fields on revenue items by revenue schedule number  # noqa: E501

        This REST API reference describes how to update custom fields on revenue Items by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.p_ut_custom_fieldson_revenue_items_by_revenue_schedule(rs_number, request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str rs_number: Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\". (required)
        :param PUTScheduleRIDetailType request:  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: CommonResponseType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.p_ut_custom_fieldson_revenue_items_by_revenue_schedule_with_http_info(rs_number, request, **kwargs)  # noqa: E501
        else:
            (data) = self.p_ut_custom_fieldson_revenue_items_by_revenue_schedule_with_http_info(rs_number, request, **kwargs)  # noqa: E501
            return data

    def p_ut_custom_fieldson_revenue_items_by_revenue_schedule_with_http_info(self, rs_number, request, **kwargs):  # noqa: E501
        """Update custom fields on revenue items by revenue schedule number  # noqa: E501

        This REST API reference describes how to update custom fields on revenue Items by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.p_ut_custom_fieldson_revenue_items_by_revenue_schedule_with_http_info(rs_number, request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str rs_number: Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\". (required)
        :param PUTScheduleRIDetailType request:  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: CommonResponseType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['rs_number', 'request', 'zuora_entity_ids']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method p_ut_custom_fieldson_revenue_items_by_revenue_schedule" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'rs_number' is set
        if ('rs_number' not in params or
                params['rs_number'] is None):
            raise ValueError("Missing the required parameter `rs_number` when calling `p_ut_custom_fieldson_revenue_items_by_revenue_schedule`")  # noqa: E501
        # verify the required parameter 'request' is set
        if ('request' not in params or
                params['request'] is None):
            raise ValueError("Missing the required parameter `request` when calling `p_ut_custom_fieldson_revenue_items_by_revenue_schedule`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'rs_number' in params:
            path_params['rs-number'] = params['rs_number']  # noqa: E501

        query_params = []

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'request' in params:
            body_params = params['request']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/revenue-items/revenue-schedules/{rs-number}', 'PUT',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='CommonResponseType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
