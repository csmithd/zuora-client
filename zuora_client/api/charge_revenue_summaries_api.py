# coding: utf-8




from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from zuora_client.api_client import ApiClient


class ChargeRevenueSummariesApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def getcrs_by_charge_id(self, charge_key, **kwargs):  # noqa: E501
        """Get charge summary details by charge ID  # noqa: E501

        This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the subscription charge ID. This response retrieves all revenue items associated with a charge revenue summary.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.getcrs_by_charge_id(charge_key, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str charge_key: ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: GETChargeRSDetailType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.getcrs_by_charge_id_with_http_info(charge_key, **kwargs)  # noqa: E501
        else:
            (data) = self.getcrs_by_charge_id_with_http_info(charge_key, **kwargs)  # noqa: E501
            return data

    def getcrs_by_charge_id_with_http_info(self, charge_key, **kwargs):  # noqa: E501
        """Get charge summary details by charge ID  # noqa: E501

        This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the subscription charge ID. This response retrieves all revenue items associated with a charge revenue summary.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.getcrs_by_charge_id_with_http_info(charge_key, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str charge_key: ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: GETChargeRSDetailType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['charge_key', 'zuora_entity_ids']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method getcrs_by_charge_id" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'charge_key' is set
        if ('charge_key' not in params or
                params['charge_key'] is None):
            raise ValueError("Missing the required parameter `charge_key` when calling `getcrs_by_charge_id`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'charge_key' in params:
            path_params['charge-key'] = params['charge_key']  # noqa: E501

        query_params = []

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/charge-revenue-summaries/subscription-charges/{charge-key}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GETChargeRSDetailType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def getcrs_by_crs_number(self, crs_number, **kwargs):  # noqa: E501
        """Get charge summary details by CRS number  # noqa: E501

        This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the charge revenue summary number. The response includes all revenue items associated with the charge revenue summary.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.getcrs_by_crs_number(crs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str crs_number: The charge revenue summary number.  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: GETChargeRSDetailType
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.getcrs_by_crs_number_with_http_info(crs_number, **kwargs)  # noqa: E501
        else:
            (data) = self.getcrs_by_crs_number_with_http_info(crs_number, **kwargs)  # noqa: E501
            return data

    def getcrs_by_crs_number_with_http_info(self, crs_number, **kwargs):  # noqa: E501
        """Get charge summary details by CRS number  # noqa: E501

        This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the charge revenue summary number. The response includes all revenue items associated with the charge revenue summary.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.getcrs_by_crs_number_with_http_info(crs_number, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str crs_number: The charge revenue summary number.  (required)
        :param str zuora_entity_ids: An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
        :return: GETChargeRSDetailType
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['crs_number', 'zuora_entity_ids']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method getcrs_by_crs_number" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'crs_number' is set
        if ('crs_number' not in params or
                params['crs_number'] is None):
            raise ValueError("Missing the required parameter `crs_number` when calling `getcrs_by_crs_number`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'crs_number' in params:
            path_params['crs-number'] = params['crs_number']  # noqa: E501

        query_params = []

        header_params = {}
        if 'zuora_entity_ids' in params:
            header_params['Zuora-Entity-Ids'] = params['zuora_entity_ids']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json; charset=utf-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json; charset=utf-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/charge-revenue-summaries/{crs-number}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GETChargeRSDetailType',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
