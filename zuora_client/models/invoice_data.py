# coding: utf-8




import pprint
import re  # noqa: F401

import six

from zuora_client.models.invoice_data_invoice import InvoiceDataInvoice  # noqa: F401,E501
from zuora_client.models.invoice_item import InvoiceItem  # noqa: F401,E501


class InvoiceData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'invoice': 'InvoiceDataInvoice',
        'invoice_item': 'list[InvoiceItem]'
    }

    attribute_map = {
        'invoice': 'Invoice',
        'invoice_item': 'InvoiceItem'
    }

    def __init__(self, invoice=None, invoice_item=None):  # noqa: E501
        """InvoiceData - a model defined in Swagger"""  # noqa: E501

        self._invoice = None
        self._invoice_item = None
        self.discriminator = None

        if invoice is not None:
            self.invoice = invoice
        if invoice_item is not None:
            self.invoice_item = invoice_item

    @property
    def invoice(self):
        """Gets the invoice of this InvoiceData.  # noqa: E501


        :return: The invoice of this InvoiceData.  # noqa: E501
        :rtype: InvoiceDataInvoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this InvoiceData.


        :param invoice: The invoice of this InvoiceData.  # noqa: E501
        :type: InvoiceDataInvoice
        """

        self._invoice = invoice

    @property
    def invoice_item(self):
        """Gets the invoice_item of this InvoiceData.  # noqa: E501

          # noqa: E501

        :return: The invoice_item of this InvoiceData.  # noqa: E501
        :rtype: list[InvoiceItem]
        """
        return self._invoice_item

    @invoice_item.setter
    def invoice_item(self, invoice_item):
        """Sets the invoice_item of this InvoiceData.

          # noqa: E501

        :param invoice_item: The invoice_item of this InvoiceData.  # noqa: E501
        :type: list[InvoiceItem]
        """

        self._invoice_item = invoice_item

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InvoiceData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoiceData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
