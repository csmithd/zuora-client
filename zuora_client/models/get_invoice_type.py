# coding: utf-8




import pprint
import re  # noqa: F401

import six

from zuora_client.models.invoice_object_custom_fields import InvoiceObjectCustomFields  # noqa: F401,E501
from zuora_client.models.invoice_object_ns_fields import InvoiceObjectNSFields  # noqa: F401,E501


class GETInvoiceType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'integration_id__ns': 'str',
        'integration_status__ns': 'str',
        'sync_date__ns': 'str',
        'account_id': 'str',
        'account_name': 'str',
        'account_number': 'str',
        'amount': 'float',
        'balance': 'float',
        'body': 'str',
        'created_by': 'str',
        'credit_balance_adjustment_amount': 'str',
        'due_date': 'date',
        'id': 'str',
        'invoice_date': 'date',
        'invoice_files': 'list[InvoiceFile]',
        'invoice_items': 'list[InvoiceItem]',
        'invoice_number': 'str',
        'invoice_target_date': 'date',
        'reversed': 'bool',
        'status': 'str'
    }

    attribute_map = {
        'integration_id__ns': 'IntegrationId__NS',
        'integration_status__ns': 'IntegrationStatus__NS',
        'sync_date__ns': 'SyncDate__NS',
        'account_id': 'accountId',
        'account_name': 'accountName',
        'account_number': 'accountNumber',
        'amount': 'amount',
        'balance': 'balance',
        'body': 'body',
        'created_by': 'createdBy',
        'credit_balance_adjustment_amount': 'creditBalanceAdjustmentAmount',
        'due_date': 'dueDate',
        'id': 'id',
        'invoice_date': 'invoiceDate',
        'invoice_files': 'invoiceFiles',
        'invoice_items': 'invoiceItems',
        'invoice_number': 'invoiceNumber',
        'invoice_target_date': 'invoiceTargetDate',
        'reversed': 'reversed',
        'status': 'status'
    }

    def __init__(self, integration_id__ns=None, integration_status__ns=None, sync_date__ns=None, account_id=None, account_name=None, account_number=None, amount=None, balance=None, body=None, created_by=None, credit_balance_adjustment_amount=None, due_date=None, id=None, invoice_date=None, invoice_files=None, invoice_items=None, invoice_number=None, invoice_target_date=None, reversed=None, status=None):  # noqa: E501
        """GETInvoiceType - a model defined in Swagger"""  # noqa: E501

        self._integration_id__ns = None
        self._integration_status__ns = None
        self._sync_date__ns = None
        self._account_id = None
        self._account_name = None
        self._account_number = None
        self._amount = None
        self._balance = None
        self._body = None
        self._created_by = None
        self._credit_balance_adjustment_amount = None
        self._due_date = None
        self._id = None
        self._invoice_date = None
        self._invoice_files = None
        self._invoice_items = None
        self._invoice_number = None
        self._invoice_target_date = None
        self._reversed = None
        self._status = None
        self.discriminator = None

        if integration_id__ns is not None:
            self.integration_id__ns = integration_id__ns
        if integration_status__ns is not None:
            self.integration_status__ns = integration_status__ns
        if sync_date__ns is not None:
            self.sync_date__ns = sync_date__ns
        if account_id is not None:
            self.account_id = account_id
        if account_name is not None:
            self.account_name = account_name
        if account_number is not None:
            self.account_number = account_number
        if amount is not None:
            self.amount = amount
        if balance is not None:
            self.balance = balance
        if body is not None:
            self.body = body
        if created_by is not None:
            self.created_by = created_by
        if credit_balance_adjustment_amount is not None:
            self.credit_balance_adjustment_amount = credit_balance_adjustment_amount
        if due_date is not None:
            self.due_date = due_date
        if id is not None:
            self.id = id
        if invoice_date is not None:
            self.invoice_date = invoice_date
        if invoice_files is not None:
            self.invoice_files = invoice_files
        if invoice_items is not None:
            self.invoice_items = invoice_items
        if invoice_number is not None:
            self.invoice_number = invoice_number
        if invoice_target_date is not None:
            self.invoice_target_date = invoice_target_date
        if reversed is not None:
            self.reversed = reversed
        if status is not None:
            self.status = status

    @property
    def integration_id__ns(self):
        """Gets the integration_id__ns of this GETInvoiceType.  # noqa: E501

        ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The integration_id__ns of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._integration_id__ns

    @integration_id__ns.setter
    def integration_id__ns(self, integration_id__ns):
        """Sets the integration_id__ns of this GETInvoiceType.

        ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param integration_id__ns: The integration_id__ns of this GETInvoiceType.  # noqa: E501
        :type: str
        """
        if integration_id__ns is not None and len(integration_id__ns) > 255:
            raise ValueError("Invalid value for `integration_id__ns`, length must be less than or equal to `255`")  # noqa: E501

        self._integration_id__ns = integration_id__ns

    @property
    def integration_status__ns(self):
        """Gets the integration_status__ns of this GETInvoiceType.  # noqa: E501

        Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The integration_status__ns of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._integration_status__ns

    @integration_status__ns.setter
    def integration_status__ns(self, integration_status__ns):
        """Sets the integration_status__ns of this GETInvoiceType.

        Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param integration_status__ns: The integration_status__ns of this GETInvoiceType.  # noqa: E501
        :type: str
        """
        if integration_status__ns is not None and len(integration_status__ns) > 255:
            raise ValueError("Invalid value for `integration_status__ns`, length must be less than or equal to `255`")  # noqa: E501

        self._integration_status__ns = integration_status__ns

    @property
    def sync_date__ns(self):
        """Gets the sync_date__ns of this GETInvoiceType.  # noqa: E501

        Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The sync_date__ns of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._sync_date__ns

    @sync_date__ns.setter
    def sync_date__ns(self, sync_date__ns):
        """Sets the sync_date__ns of this GETInvoiceType.

        Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param sync_date__ns: The sync_date__ns of this GETInvoiceType.  # noqa: E501
        :type: str
        """
        if sync_date__ns is not None and len(sync_date__ns) > 255:
            raise ValueError("Invalid value for `sync_date__ns`, length must be less than or equal to `255`")  # noqa: E501

        self._sync_date__ns = sync_date__ns

    @property
    def account_id(self):
        """Gets the account_id of this GETInvoiceType.  # noqa: E501

        Customer account ID.   # noqa: E501

        :return: The account_id of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GETInvoiceType.

        Customer account ID.   # noqa: E501

        :param account_id: The account_id of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def account_name(self):
        """Gets the account_name of this GETInvoiceType.  # noqa: E501

        Customer account name.   # noqa: E501

        :return: The account_name of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this GETInvoiceType.

        Customer account name.   # noqa: E501

        :param account_name: The account_name of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def account_number(self):
        """Gets the account_number of this GETInvoiceType.  # noqa: E501

        Customer account number.   # noqa: E501

        :return: The account_number of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this GETInvoiceType.

        Customer account number.   # noqa: E501

        :param account_number: The account_number of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def amount(self):
        """Gets the amount of this GETInvoiceType.  # noqa: E501

        Amount of the invoice before adjustments, discounts, and similar items.   # noqa: E501

        :return: The amount of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GETInvoiceType.

        Amount of the invoice before adjustments, discounts, and similar items.   # noqa: E501

        :param amount: The amount of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._amount = amount

    @property
    def balance(self):
        """Gets the balance of this GETInvoiceType.  # noqa: E501

        Balance remaining due on the invoice (after adjustments, discounts, etc.)   # noqa: E501

        :return: The balance of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this GETInvoiceType.

        Balance remaining due on the invoice (after adjustments, discounts, etc.)   # noqa: E501

        :param balance: The balance of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._balance = balance

    @property
    def body(self):
        """Gets the body of this GETInvoiceType.  # noqa: E501

        The REST URL of the invoice PDF file.   # noqa: E501

        :return: The body of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this GETInvoiceType.

        The REST URL of the invoice PDF file.   # noqa: E501

        :param body: The body of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._body = body

    @property
    def created_by(self):
        """Gets the created_by of this GETInvoiceType.  # noqa: E501

        User ID of the person who created the invoice. If a bill run generated the invoice, then this is the user ID of person who created the bill run.   # noqa: E501

        :return: The created_by of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this GETInvoiceType.

        User ID of the person who created the invoice. If a bill run generated the invoice, then this is the user ID of person who created the bill run.   # noqa: E501

        :param created_by: The created_by of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def credit_balance_adjustment_amount(self):
        """Gets the credit_balance_adjustment_amount of this GETInvoiceType.  # noqa: E501

          # noqa: E501

        :return: The credit_balance_adjustment_amount of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._credit_balance_adjustment_amount

    @credit_balance_adjustment_amount.setter
    def credit_balance_adjustment_amount(self, credit_balance_adjustment_amount):
        """Sets the credit_balance_adjustment_amount of this GETInvoiceType.

          # noqa: E501

        :param credit_balance_adjustment_amount: The credit_balance_adjustment_amount of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._credit_balance_adjustment_amount = credit_balance_adjustment_amount

    @property
    def due_date(self):
        """Gets the due_date of this GETInvoiceType.  # noqa: E501

        Payment due date as _yyyy-mm-dd_.   # noqa: E501

        :return: The due_date of this GETInvoiceType.  # noqa: E501
        :rtype: date
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this GETInvoiceType.

        Payment due date as _yyyy-mm-dd_.   # noqa: E501

        :param due_date: The due_date of this GETInvoiceType.  # noqa: E501
        :type: date
        """

        self._due_date = due_date

    @property
    def id(self):
        """Gets the id of this GETInvoiceType.  # noqa: E501

        Invoice ID.   # noqa: E501

        :return: The id of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GETInvoiceType.

        Invoice ID.   # noqa: E501

        :param id: The id of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def invoice_date(self):
        """Gets the invoice_date of this GETInvoiceType.  # noqa: E501

        Invoice date as _yyyy-mm-dd_   # noqa: E501

        :return: The invoice_date of this GETInvoiceType.  # noqa: E501
        :rtype: date
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this GETInvoiceType.

        Invoice date as _yyyy-mm-dd_   # noqa: E501

        :param invoice_date: The invoice_date of this GETInvoiceType.  # noqa: E501
        :type: date
        """

        self._invoice_date = invoice_date

    @property
    def invoice_files(self):
        """Gets the invoice_files of this GETInvoiceType.  # noqa: E501

        URL to retrieve information about all files of a specific invoice if any file exists; otherwise absent. For example, `https://rest.zuora.com/v1/invoices/2c92c095511f5b4401512682dcfd7987/files`. If you want to view the invoice file details, call [Get invoice files](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceFiles) with the returned URL.  If your tenant was created before Zuora Release 228 (R228), July 2018, the value of this field is an array of invoice file details. For more information about the array, see the response body of [Get invoice files](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceFiles).   Zuora recommends that you use the latest behavior to retrieve invoice information. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/) asking for invoice item and file references to be enabled in the REST API.   # noqa: E501

        :return: The invoice_files of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._invoice_files

    @invoice_files.setter
    def invoice_files(self, invoice_files):
        """Sets the invoice_files of this GETInvoiceType.

        URL to retrieve information about all files of a specific invoice if any file exists; otherwise absent. For example, `https://rest.zuora.com/v1/invoices/2c92c095511f5b4401512682dcfd7987/files`. If you want to view the invoice file details, call [Get invoice files](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceFiles) with the returned URL.  If your tenant was created before Zuora Release 228 (R228), July 2018, the value of this field is an array of invoice file details. For more information about the array, see the response body of [Get invoice files](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceFiles).   Zuora recommends that you use the latest behavior to retrieve invoice information. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/) asking for invoice item and file references to be enabled in the REST API.   # noqa: E501

        :param invoice_files: The invoice_files of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._invoice_files = invoice_files

    @property
    def invoice_items(self):
        """Gets the invoice_items of this GETInvoiceType.  # noqa: E501

        URL to retrieve information about all items of a specific invoice. For example, `https://rest.zuora.com/v1/invoices/2c92c095511f5b4401512682dcfd7987/items`. If you want to view the invoice item details, call [Get invoice items](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceItems) with the returned URL.  If your tenant was created before Zuora Release 228 (R228), July 2018, the value of this field is an array of invoice item details. For more information about the array, see the response body of [Get invoice items](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceItems).   Zuora recommends that you use the latest behavior to retrieve invoice information. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/) asking for invoice item and file references to be enabled in the REST API.    # noqa: E501

        :return: The invoice_items of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._invoice_items

    @invoice_items.setter
    def invoice_items(self, invoice_items):
        """Sets the invoice_items of this GETInvoiceType.

        URL to retrieve information about all items of a specific invoice. For example, `https://rest.zuora.com/v1/invoices/2c92c095511f5b4401512682dcfd7987/items`. If you want to view the invoice item details, call [Get invoice items](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceItems) with the returned URL.  If your tenant was created before Zuora Release 228 (R228), July 2018, the value of this field is an array of invoice item details. For more information about the array, see the response body of [Get invoice items](https://www.zuora.com/developer/api-reference/#operation/GET_InvoiceItems).   Zuora recommends that you use the latest behavior to retrieve invoice information. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/) asking for invoice item and file references to be enabled in the REST API.    # noqa: E501

        :param invoice_items: The invoice_items of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._invoice_items = invoice_items

    @property
    def invoice_number(self):
        """Gets the invoice_number of this GETInvoiceType.  # noqa: E501

        Unique invoice ID, returned as a string.   # noqa: E501

        :return: The invoice_number of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this GETInvoiceType.

        Unique invoice ID, returned as a string.   # noqa: E501

        :param invoice_number: The invoice_number of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._invoice_number = invoice_number

    @property
    def invoice_target_date(self):
        """Gets the invoice_target_date of this GETInvoiceType.  # noqa: E501

        Date through which charges on this invoice are calculated, as _yyyy-mm-dd_.   # noqa: E501

        :return: The invoice_target_date of this GETInvoiceType.  # noqa: E501
        :rtype: date
        """
        return self._invoice_target_date

    @invoice_target_date.setter
    def invoice_target_date(self, invoice_target_date):
        """Sets the invoice_target_date of this GETInvoiceType.

        Date through which charges on this invoice are calculated, as _yyyy-mm-dd_.   # noqa: E501

        :param invoice_target_date: The invoice_target_date of this GETInvoiceType.  # noqa: E501
        :type: date
        """

        self._invoice_target_date = invoice_target_date

    @property
    def reversed(self):
        """Gets the reversed of this GETInvoiceType.  # noqa: E501

        Whether the invoice is reversed.   # noqa: E501

        :return: The reversed of this GETInvoiceType.  # noqa: E501
        :rtype: bool
        """
        return self._reversed

    @reversed.setter
    def reversed(self, reversed):
        """Sets the reversed of this GETInvoiceType.

        Whether the invoice is reversed.   # noqa: E501

        :param reversed: The reversed of this GETInvoiceType.  # noqa: E501
        :type: bool
        """

        self._reversed = reversed

    @property
    def status(self):
        """Gets the status of this GETInvoiceType.  # noqa: E501

        Status of the invoice in the system - not the payment status, but the status of the invoice itself. Possible values are: `Posted`, `Draft`, `Canceled`, `Error`.   # noqa: E501

        :return: The status of this GETInvoiceType.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GETInvoiceType.

        Status of the invoice in the system - not the payment status, but the status of the invoice itself. Possible values are: `Posted`, `Draft`, `Canceled`, `Error`.   # noqa: E501

        :param status: The status of this GETInvoiceType.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GETInvoiceType, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GETInvoiceType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
