# coding: utf-8




import pprint
import re  # noqa: F401

import six


class AmendRequestPreviewOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'enable_preview_mode': 'bool',
        'include_existing_draft_invoice_items': 'bool',
        'number_of_periods': 'int',
        'preview_through_term_end': 'bool',
        'preview_type': 'str'
    }

    attribute_map = {
        'enable_preview_mode': 'EnablePreviewMode',
        'include_existing_draft_invoice_items': 'IncludeExistingDraftInvoiceItems',
        'number_of_periods': 'NumberOfPeriods',
        'preview_through_term_end': 'PreviewThroughTermEnd',
        'preview_type': 'PreviewType'
    }

    def __init__(self, enable_preview_mode=None, include_existing_draft_invoice_items=None, number_of_periods=None, preview_through_term_end=None, preview_type=None):  # noqa: E501
        """AmendRequestPreviewOptions - a model defined in Swagger"""  # noqa: E501

        self._enable_preview_mode = None
        self._include_existing_draft_invoice_items = None
        self._number_of_periods = None
        self._preview_through_term_end = None
        self._preview_type = None
        self.discriminator = None

        if enable_preview_mode is not None:
            self.enable_preview_mode = enable_preview_mode
        if include_existing_draft_invoice_items is not None:
            self.include_existing_draft_invoice_items = include_existing_draft_invoice_items
        if number_of_periods is not None:
            self.number_of_periods = number_of_periods
        if preview_through_term_end is not None:
            self.preview_through_term_end = preview_through_term_end
        if preview_type is not None:
            self.preview_type = preview_type

    @property
    def enable_preview_mode(self):
        """Gets the enable_preview_mode of this AmendRequestPreviewOptions.  # noqa: E501

         Determines whether to create an amendment or display a preview of the change.  # noqa: E501

        :return: The enable_preview_mode of this AmendRequestPreviewOptions.  # noqa: E501
        :rtype: bool
        """
        return self._enable_preview_mode

    @enable_preview_mode.setter
    def enable_preview_mode(self, enable_preview_mode):
        """Sets the enable_preview_mode of this AmendRequestPreviewOptions.

         Determines whether to create an amendment or display a preview of the change.  # noqa: E501

        :param enable_preview_mode: The enable_preview_mode of this AmendRequestPreviewOptions.  # noqa: E501
        :type: bool
        """

        self._enable_preview_mode = enable_preview_mode

    @property
    def include_existing_draft_invoice_items(self):
        """Gets the include_existing_draft_invoice_items of this AmendRequestPreviewOptions.  # noqa: E501

         Specifies whether to include draft invoice items in amendment previews.  # noqa: E501

        :return: The include_existing_draft_invoice_items of this AmendRequestPreviewOptions.  # noqa: E501
        :rtype: bool
        """
        return self._include_existing_draft_invoice_items

    @include_existing_draft_invoice_items.setter
    def include_existing_draft_invoice_items(self, include_existing_draft_invoice_items):
        """Sets the include_existing_draft_invoice_items of this AmendRequestPreviewOptions.

         Specifies whether to include draft invoice items in amendment previews.  # noqa: E501

        :param include_existing_draft_invoice_items: The include_existing_draft_invoice_items of this AmendRequestPreviewOptions.  # noqa: E501
        :type: bool
        """

        self._include_existing_draft_invoice_items = include_existing_draft_invoice_items

    @property
    def number_of_periods(self):
        """Gets the number_of_periods of this AmendRequestPreviewOptions.  # noqa: E501

         Indicates the number of invoice periods to show in a preview.  # noqa: E501

        :return: The number_of_periods of this AmendRequestPreviewOptions.  # noqa: E501
        :rtype: int
        """
        return self._number_of_periods

    @number_of_periods.setter
    def number_of_periods(self, number_of_periods):
        """Sets the number_of_periods of this AmendRequestPreviewOptions.

         Indicates the number of invoice periods to show in a preview.  # noqa: E501

        :param number_of_periods: The number_of_periods of this AmendRequestPreviewOptions.  # noqa: E501
        :type: int
        """

        self._number_of_periods = number_of_periods

    @property
    def preview_through_term_end(self):
        """Gets the preview_through_term_end of this AmendRequestPreviewOptions.  # noqa: E501

         Request to preview the charge through the end of the subscription term.  # noqa: E501

        :return: The preview_through_term_end of this AmendRequestPreviewOptions.  # noqa: E501
        :rtype: bool
        """
        return self._preview_through_term_end

    @preview_through_term_end.setter
    def preview_through_term_end(self, preview_through_term_end):
        """Sets the preview_through_term_end of this AmendRequestPreviewOptions.

         Request to preview the charge through the end of the subscription term.  # noqa: E501

        :param preview_through_term_end: The preview_through_term_end of this AmendRequestPreviewOptions.  # noqa: E501
        :type: bool
        """

        self._preview_through_term_end = preview_through_term_end

    @property
    def preview_type(self):
        """Gets the preview_type of this AmendRequestPreviewOptions.  # noqa: E501

         The type of preview you will receive from a preview request.  # noqa: E501

        :return: The preview_type of this AmendRequestPreviewOptions.  # noqa: E501
        :rtype: str
        """
        return self._preview_type

    @preview_type.setter
    def preview_type(self, preview_type):
        """Sets the preview_type of this AmendRequestPreviewOptions.

         The type of preview you will receive from a preview request.  # noqa: E501

        :param preview_type: The preview_type of this AmendRequestPreviewOptions.  # noqa: E501
        :type: str
        """

        self._preview_type = preview_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AmendRequestPreviewOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AmendRequestPreviewOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
